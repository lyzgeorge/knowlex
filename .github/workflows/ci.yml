name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    defaults:
      run:
        working-directory: ./

    steps:
    - uses: actions/checkout@v4

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run type check
      run: pnpm run type-check

    - name: Run linter
      run: pnpm run lint:check

    - name: Run formatter check
      run: pnpm run format:check

    - name: Run tests
      run: pnpm run test:coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  build:
    runs-on: ${{ matrix.os }}
    needs: lint-and-test

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'pnpm'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build web app
      run: pnpm run build:web

    - name: Build Electron app
      run: pnpm run electron:pack

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ matrix.os }}
        path: |
          dist/
          release/