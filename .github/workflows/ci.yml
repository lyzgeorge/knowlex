name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build shared types
        run: pnpm --filter @knowlex/types build

      - name: Lint
        run: pnpm lint

      - name: Type check
        run: pnpm tsc --noEmit

      - name: Test
        run: pnpm test

      - name: Build
        run: pnpm build

  build-electron:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build shared types
        run: pnpm --filter @knowlex/types build

      - name: Build Electron app
        run: pnpm build

      - name: Package Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: pnpm dist:mac

      - name: Package Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: pnpm dist:win

      - name: Package Electron app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: pnpm dist:linux